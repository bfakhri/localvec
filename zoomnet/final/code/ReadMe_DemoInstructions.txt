'''
-----------------------------------------------------------------------------
LICENSE
-----------------------------------------------------------------------------
The MIT License

Copyright (c) 2017 - Bijan Fakhri and Meredith Moore 

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
-----------------------------------------------------------------------------
'''
All code written by us abides by the above license. 





This code/ directory houses all of the code necessary for training and testing ZoomNet
To demonstrate the methodology described in the report, we provide a demonstration 
workflow. 

Demonstration Workflow: 

1) Install Necessary Dependencies
1.1) Install Keras
	- pip install keras

1.2) Install TensorFlow
	- We used this tutorial: https://www.tensorflow.org/install/

1.3) Install OpenCV 
	- We used this tutorial: http://docs.opencv.org/2.4/doc/tutorials/introduction/
		linux_install/linux_install.html

1.4) Install Missing Python Modules
	- pip install numpy

2) Run our code
2.1) Download relevant data 
	- Go to the data/ directory
	- Run the script get_data.sh
	- This will download the Pascal VOC2012 dataset necessary for trainint/testing
2.2) Train the model (if you do not want to waste time training the model, use the
			get_trained_model.sh script to download a trained model.
	- Go to code/ directory
	- Run train_synthetic.py
	- This will train the model with the synthetic data generated by data_gen.py
2.3) Run and test the model using our iterative approach
	- Go to code/ directory
	- Run test_synthetic_iterative.py
	- This will test the model outputted in step 2
	- An average intersection over union score will be calculated

Note - Demonstration runs on Ubuntu 14.04 LTS


